.src_dir_ref_storage: &src_dir_ref_storage
  - mkdir build || true
  - pwd > build/original_source_directory

.src_dir_ref_replacement: &src_dir_ref_replacement
  - old_sdir=`cat build/original_source_directory`
  - this_sdir=`pwd`
  - find build
    -type f -a
    \! \(
      -perm /111 -o
      \(
        -name '*.o' -o -name '*.a' -o -name '*.so'
      \)
    \)
    -exec sed -i "s|$old_sdir|$this_sdir|g" {} +

.common:
  image: $GITLAB_OCI_SMRB_REGISTRY/$PST_SMRB_OCI_BUILDER:$PST_SMRB_OCI_COMMON_TAG
  tags: [k8srunner]

.common.artifact-builder:
  extends: .common
  before_script:
    - *src_dir_ref_storage

  artifacts:
    paths:
      - build

.common.artifact-retriever:
  extends: .common
  before_script:
    - *src_dir_ref_replacement

.common.lint:
  extends: .common.artifact-retriever

stages:
  - build
  - lint
  - test
  - publish
  - scan
  - pages

build_debug:
  extends: .common.artifact-builder
  stage: build
  # instead of calling g++ directly you can also use some build toolkit like make
  # install the necessary build tools when needed
  script:
    - make local-cpp-build-debug

build_release:
  extends: .common.artifact-builder
  stage: build
  script:
    - make local-cpp-build-release

build_export_compile_commands:
 extends: .common.artifact-builder
 stage: build
 script:
    - make local-cpp-build-export-compile-commands

lint_clang_tidy:
  extends: .common.lint
  stage: lint
  needs: ["build_export_compile_commands"]
  script:
    - make local-cpp-lint-clang
  artifacts:
    paths:
      - ./build

lint_iwyu:
  extends: .common.lint
  stage: lint
  needs: ["build_export_compile_commands"]
  script:
    - make local-cpp-lint-iwyu
  artifacts:
    paths:
      - ./build

lint_cppcheck:
  extends: .common.lint
  stage: lint
  needs: ["build_export_compile_commands"]
  script:
    - make local-cpp-lint-cppcheck
  artifacts:
    paths:
      - ./build
    expire_in: 1 week
    when: always

test:
  extends: .common.artifact-retriever
  stage: test
  needs: ["build_debug"]
  before_script:
    - make local-cpp-test-ctest
  script:
    - *src_dir_ref_storage
    - cd build
    - mkdir -p reports
    - ctest2junit > reports/unit-tests.xml
  # Capture the error logs
  # allow_failure: true
  artifacts:
    paths:
      - build/
    reports:
      junit: build/reports/unit-tests.xml

test_installation:
  extends: .common.artifact-retriever
  stage: test
  needs: ["build_release"]
  script:
    - make local-cpp-test-installation

test_memcheck:
  extends: .common.artifact-retriever
  stage: test
  needs: ["build_debug"]
  script:
    - make local-cpp-test-ctest-memcheck
  artifacts:
    paths:
      - build/
  only:
    - schedules

test_debug_build:
  extends: .common.artifact-retriever
  stage: test
  when: always
  needs: ["build_debug"]
  script:
    - make local-cpp-test-ctest
  artifacts:
    paths:
      - build/

# Test OCI
test_dada:
  tags:
    - $K8S_TEST_CLUSTER_TAG
  variables:
    PST_OCI_COMMON_REGISTRY: "registry.gitlab.com/ska-telescope/pst/ska-pst-common/ska-pst-common-builder"
    GIT_SUBMODULE_STRATEGY: normal
  stage: test
  needs:
    - oci-image-build
    - dynamic_vars
  image: "$PST_OCI_COMMON_REGISTRY:$PST_OCI_COMMON_TAG"
  script:
    - dada_db
    - dada_db -d