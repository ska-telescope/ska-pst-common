@startuml Stream Class Diagram

interface Stream
{
  + get_data_header() : AsciiHeader*
  + get_weights_header() : AsciiHeader*
  + next_slice() : Slice
}

Stream <|-- StreamLoader
Stream <|-- StreamGenerator

package ska::pst::smrb {
  class RingBufferStreamLoader
}

StreamLoader <|-- RingBufferStreamLoader

class StreamGenerator
{
  - generator : PacketGenerator*
  - layout : HeapLayout*

  + get_data_header() : AsciiHeader*
  + get_weights_header() : AsciiHeader*
  + next_slice() : Slice
}

StreamGenerator *-- PacketGenerator
StreamGenerator *-- HeapLayout

PacketGenerator o-- PacketLayout
HeapLayout o-- PacketLayout

class PacketGenerator
{
  - layout : PacketLayout*
  + fill_packet(buffer: char*);
}

class HeapLayout
{
  packet_layout : PacketLayout*

  packets_per_heap : unsigned
  data_packet_stride : unsigned
  weights_packet_stride : unsigned
  data_heap_stride : unsigned
  weights_heap_stride : unsigned 
}

class PacketLayout
{
  packet_size : unsigned
  packet_header_size : unsigned
  packet_data_size : unsigned
  packet_weights_size : unsigned
  packet_scales_size : unsigned
  packet_data_offset : unsigned
  packet_weights_offset : unsigned
  packet_scales_offset : unsigned
  nsamp_per_packet : unsigned
  nchan_per_packet : unsigned
  nsamp_per_weight : unsigned
}

class StreamLoader
{
  - data_loader : BlockLoader*
  - header_loader : BlockLoader*

  + get_data_header() : AsciiHeader*
  + get_weights_header() : AsciiHeader*
  + next_slice() : Slice
}

StreamLoader <|-- FileStreamLoader

class FileStreamLoader
{
  - data_loader : FileBlockLoader*
  - header_loader : FileBlockLoader*
}

FileStreamLoader *-- FileBlockLoader

interface BlockLoader
{
  + get_header() : AsciiHeader*
  + next_block() : Block
}

BlockLoader <|-- FileBlockLoader

class FileBlockLoader
{
  - reader : FileReader*
  
  + get_header() : AsciiHeader*
  + next_block() : Block
}


class Slice
{
  data : Block
  weights : Block
}

Slice *-- Block

class Block
{
  block : char*
  size : size_t
}

@enduml
